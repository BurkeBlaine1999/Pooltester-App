{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Owner\\\\Desktop\\\\lab10-master\\\\src\\\\components\\\\Index.js\";\nimport React, { Component } from 'react';\nimport '../App.css';\nimport { STATES } from 'mongoose';\n\nclass Index extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, \"Hello World from Index\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, \"It is \", new Date().toLocaleTimeString(), \".\"));\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      dataSource: null\n    };\n  }\n\n  componentDidMount() {\n    return fetch('http://api.openweathermap.org/data/2.5/weather?q=Galway&appid=d24d19a0fa6b2334b4039e272b3c79ef').then(response => response.json()).then(responseJson => {\n      this.setState({\n        isLoading: false,\n        dataSource: responseJson.data\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    if (this.state.isLoading) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      });\n    } else {\n      let weather = this.state.dataSource.map((val, key) => {\n        return React.createElement(\"div\", {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, val.summary));\n      });\n      return React.createElement(\"div\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, weather)));\n    }\n  }\n\n}\n\nexport default Index;","map":{"version":3,"sources":["C:\\Users\\Owner\\Desktop\\lab10-master\\src\\components\\Index.js"],"names":["React","Component","STATES","Index","render","Date","toLocaleTimeString","constructor","props","state","isLoading","dataSource","componentDidMount","fetch","then","response","json","responseJson","setState","data","catch","error","console","log","weather","map","val","key","summary"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAO,YAAP;AACA,SAAQC,MAAR,QAAqB,UAArB;;AACA,MAAMC,KAAN,SAAoBH,KAAK,CAACC,SAA1B,CAAoC;AAElCG,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAW,IAAIC,IAAJ,GAAWC,kBAAX,EAAX,MAFF,CADF;AAMD;;AACDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,IADF;AAETC,MAAAA,UAAU,EAAE;AAFH,KAAb;AAIH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,WAAOC,KAAK,CAAC,gGAAD,CAAL,CACFC,IADE,CACIC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADjB,EAEFF,IAFE,CAEIG,YAAD,IAAkB;AACpB,WAAKC,QAAL,CAAc;AACVR,QAAAA,SAAS,EAAE,KADD;AAEVC,QAAAA,UAAU,EAAEM,YAAY,CAACE;AAFf,OAAd;AAKH,KARE,EAUFC,KAVE,CAUKC,KAAD,IAAW;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KAZE,CAAP;AAaH;;AAEDjB,EAAAA,MAAM,GAAG;AAEL,QAAI,KAAKK,KAAL,CAAWC,SAAf,EAA0B;AACtB,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH,KAJD,MAIO;AAEH,UAAIc,OAAO,GAAG,KAAKf,KAAL,CAAWE,UAAX,CAAsBc,GAAtB,CAA0B,CAACC,GAAD,EAAMC,GAAN,KAAc;AAClD,eAAO;AAAK,UAAA,GAAG,EAAEA,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKD,GAAG,CAACE,OAAT,CADG,CAAP;AAGH,OAJa,CAAd;AAOA,aAEI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKJ,OAAL,CADJ,CADJ,CAFJ;AAUH;AACJ;;AA5DmC;;AAgEpC,eAAerB,KAAf","sourcesContent":["import React,{Component} from 'react';\nimport '../App.css';\nimport {STATES} from 'mongoose';\nclass Index extends React.Component {\n\n  render() {\n    return (\n      <div className=\"App-header\">\n        <h1>Hello World from Index</h1>\n        <h2>It is {new Date().toLocaleTimeString()}.</h2>\n      </div>\n    );\n  }\n  constructor(props) {\n    super(props);\n    this.state = {\n        isLoading: true,\n        dataSource: null,\n    }\n}\n\ncomponentDidMount() {\n    return fetch('http://api.openweathermap.org/data/2.5/weather?q=Galway&appid=d24d19a0fa6b2334b4039e272b3c79ef')\n        .then((response) => response.json())\n        .then((responseJson) => {\n            this.setState({\n                isLoading: false,\n                dataSource: responseJson.data,\n            })\n\n        })\n\n        .catch((error) => {\n            console.log(error)\n        });\n}\n\nrender() {\n\n    if (this.state.isLoading) {\n        return (\n            <div></div>\n        )\n    } else {\n\n        let weather = this.state.dataSource.map((val, key) => {\n            return <div key={key}>\n                <h1>{val.summary}</h1>\n            </div>\n        });\n\n\n        return (\n\n            <div className=\"App-header\">\n                <div>\n                    <h1>{weather}</h1>\n                </div>\n\n            </div>\n\n        );\n    }\n}\n}\n\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}